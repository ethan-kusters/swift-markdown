{
  "abstract" : [
    {
      "text" : "A directive argument, parsed from the form ",
      "type" : "text"
    },
    {
      "code" : "name: value",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "name: \"value\"",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Markdown\/documentation\/Markdown"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8Markdown17DirectiveArgumentV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "DirectiveArgument"
      }
    ],
    "modules" : [
      {
        "name" : "Markdown"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "DirectiveArgument"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "DirectiveArgument"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "DirectiveArgument"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Markdown\/SQ"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupChildren",
        "doc:\/\/Markdown\/documentation\/Markdown\/ChildIndexPath",
        "doc:\/\/Markdown\/documentation\/Markdown\/TypedChildIndexPath",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgumentText",
        "doc:\/\/Markdown\/documentation\/Markdown\/Document",
        "doc:\/\/Markdown\/documentation\/Markdown\/LiteralMarkup",
        "doc:\/\/Markdown\/documentation\/Markdown\/PlainTextConvertibleMarkup"
      ],
      "title" : "Essentials"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/hasTrailingComma",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/name",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/nameRange",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/value",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/valueRange"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/markdown\/directiveargument"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Markdown/SQ": {
  "identifier" : "doc:\/\/Markdown\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://Markdown/documentation/Markdown": {
  "abstract" : [
    {
      "text" : "Swift ",
      "type" : "text"
    },
    {
      "code" : "Markdown",
      "type" : "codeVoice"
    },
    {
      "text" : " is a Swift package for parsing, building, editing, and analyzing Markdown documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Markdown",
  "type" : "topic",
  "url" : "\/documentation\/markdown"
},
"doc://Markdown/documentation/Markdown/ChildIndexPath": {
  "abstract" : [
    {
      "text" : "An array of indexes for traversing deeply into a markup tree.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChildIndexPath"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/ChildIndexPath",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChildIndexPath"
    }
  ],
  "role" : "symbol",
  "title" : "ChildIndexPath",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/childindexpath"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument": {
  "abstract" : [
    {
      "text" : "A directive argument, parsed from the form ",
      "type" : "text"
    },
    {
      "code" : "name: value",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "name: \"value\"",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DirectiveArgument"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DirectiveArgument"
    }
  ],
  "role" : "symbol",
  "title" : "DirectiveArgument",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument\/equatable-implementations"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument/hasTrailingComma": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the argument value was followed by a comma.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hasTrailingComma"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/hasTrailingComma",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hasTrailingComma",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument\/hastrailingcomma"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument/name": {
  "abstract" : [
    {
      "text" : "The name of the argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/name",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "name",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument\/name"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument/nameRange": {
  "abstract" : [
    {
      "text" : "The range of the argument name if it was parsed from source text.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nameRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown11SourceRangea",
      "text" : "SourceRange"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/nameRange",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nameRange",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument\/namerange"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument/value": {
  "abstract" : [
    {
      "text" : "The value of the argument.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "value"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/value",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "value",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument\/value"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument/valueRange": {
  "abstract" : [
    {
      "text" : "The range of the argument value if it was parsed from source text.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "valueRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown11SourceRangea",
      "text" : "SourceRange"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument\/valueRange",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "valueRange",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument\/valuerange"
},
"doc://Markdown/documentation/Markdown/DirectiveArgumentText": {
  "abstract" : [
    {
      "text" : "The argument text provided to a directive, which can be parsed",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "into various kinds of arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DirectiveArgumentText"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgumentText",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DirectiveArgumentText"
    }
  ],
  "role" : "symbol",
  "title" : "DirectiveArgumentText",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargumenttext"
},
"doc://Markdown/documentation/Markdown/Document": {
  "abstract" : [
    {
      "text" : "A markup element representing the top level of a whole document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Document"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Document"
    }
  ],
  "role" : "symbol",
  "title" : "Document",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document"
},
"doc://Markdown/documentation/Markdown/LiteralMarkup": {
  "abstract" : [
    {
      "text" : "An element that is represented with just some plain text.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LiteralMarkup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/LiteralMarkup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LiteralMarkup"
    }
  ],
  "role" : "symbol",
  "title" : "LiteralMarkup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/literalmarkup"
},
"doc://Markdown/documentation/Markdown/Markup": {
  "abstract" : [
    {
      "text" : "A markup element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Markup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Markup"
    }
  ],
  "role" : "symbol",
  "title" : "Markup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markup"
},
"doc://Markdown/documentation/Markdown/MarkupChildren": {
  "abstract" : [
    {
      "text" : "A lazy sequence consisting of an element’s child elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MarkupChildren"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MarkupChildren"
    }
  ],
  "role" : "symbol",
  "title" : "MarkupChildren",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupchildren"
},
"doc://Markdown/documentation/Markdown/PlainTextConvertibleMarkup": {
  "abstract" : [
    {
      "text" : "An element that can be converted to plain text without formatting.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PlainTextConvertibleMarkup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/PlainTextConvertibleMarkup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PlainTextConvertibleMarkup"
    }
  ],
  "role" : "symbol",
  "title" : "PlainTextConvertibleMarkup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/plaintextconvertiblemarkup"
},
"doc://Markdown/documentation/Markdown/TypedChildIndexPath": {
  "abstract" : [
    {
      "text" : "A description of a traversal through a markup tree by index and optional expected type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TypedChildIndexPath"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/TypedChildIndexPath",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TypedChildIndexPath"
    }
  ],
  "role" : "symbol",
  "title" : "TypedChildIndexPath",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/typedchildindexpath"
}
}
}