{
  "abstract" : [
    {
      "text" : "A markup element representing the top level of a whole document.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Markdown\/documentation\/Markdown"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Markdown\/documentation\/Markdown\/Document"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8Markdown8DocumentV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Document"
      }
    ],
    "modules" : [
      {
        "name" : "Markdown"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Document"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Document"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Document"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Although this could be considered a block element that can contain block elements, a ",
                  "type" : "text"
                },
                {
                  "code" : "Document",
                  "type" : "codeVoice"
                },
                {
                  "text" : " itself can’t be the child of any other markup, so it is not considered a block element.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/BasicBlockContainer",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockContainer",
        "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupChildren",
        "doc:\/\/Markdown\/documentation\/Markdown\/ChildIndexPath",
        "doc:\/\/Markdown\/documentation\/Markdown\/TypedChildIndexPath",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument",
        "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgumentText",
        "doc:\/\/Markdown\/documentation\/Markdown\/LiteralMarkup",
        "doc:\/\/Markdown\/documentation\/Markdown\/PlainTextConvertibleMarkup"
      ],
      "title" : "Essentials"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/Document\/init(parsing:options:)",
        "doc:\/\/Markdown\/documentation\/Markdown\/Document\/init(parsing:source:options:)"
      ],
      "title" : "Initializers"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/Document\/BasicBlockContainer-Implementations",
        "doc:\/\/Markdown\/documentation\/Markdown\/Document\/BlockContainer-Implementations",
        "doc:\/\/Markdown\/documentation\/Markdown\/Document\/Markup-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/markdown\/document"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Markdown/documentation/Markdown": {
  "abstract" : [
    {
      "text" : "Swift ",
      "type" : "text"
    },
    {
      "code" : "Markdown",
      "type" : "codeVoice"
    },
    {
      "text" : " is a Swift package for parsing, building, editing, and analyzing Markdown documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Markdown",
  "type" : "topic",
  "url" : "\/documentation\/markdown"
},
"doc://Markdown/documentation/Markdown/BasicBlockContainer": {
  "abstract" : [
    {
      "text" : "A block element that can contain only other block elements and doesn’t require any other information.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BasicBlockContainer"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BasicBlockContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BasicBlockContainer"
    }
  ],
  "role" : "symbol",
  "title" : "BasicBlockContainer",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/basicblockcontainer"
},
"doc://Markdown/documentation/Markdown/BlockContainer": {
  "abstract" : [
    {
      "text" : "A block element whose children must conform to ",
      "type" : "text"
    },
    {
      "code" : "BlockMarkup",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BlockContainer"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BlockContainer"
    }
  ],
  "role" : "symbol",
  "title" : "BlockContainer",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockcontainer"
},
"doc://Markdown/documentation/Markdown/BlockMarkup": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Markup Block Nodes",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockmarkup"
},
"doc://Markdown/documentation/Markdown/ChildIndexPath": {
  "abstract" : [
    {
      "text" : "An array of indexes for traversing deeply into a markup tree.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChildIndexPath"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/ChildIndexPath",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChildIndexPath"
    }
  ],
  "role" : "symbol",
  "title" : "ChildIndexPath",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/childindexpath"
},
"doc://Markdown/documentation/Markdown/DirectiveArgument": {
  "abstract" : [
    {
      "text" : "A directive argument, parsed from the form ",
      "type" : "text"
    },
    {
      "code" : "name: value",
      "type" : "codeVoice"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "code" : "name: \"value\"",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DirectiveArgument"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgument",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DirectiveArgument"
    }
  ],
  "role" : "symbol",
  "title" : "DirectiveArgument",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargument"
},
"doc://Markdown/documentation/Markdown/DirectiveArgumentText": {
  "abstract" : [
    {
      "text" : "The argument text provided to a directive, which can be parsed",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "into various kinds of arguments.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DirectiveArgumentText"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/DirectiveArgumentText",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DirectiveArgumentText"
    }
  ],
  "role" : "symbol",
  "title" : "DirectiveArgumentText",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/directiveargumenttext"
},
"doc://Markdown/documentation/Markdown/Document": {
  "abstract" : [
    {
      "text" : "A markup element representing the top level of a whole document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Document"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Document"
    }
  ],
  "role" : "symbol",
  "title" : "Document",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document"
},
"doc://Markdown/documentation/Markdown/Document/BasicBlockContainer-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document\/BasicBlockContainer-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BasicBlockContainer Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document\/basicblockcontainer-implementations"
},
"doc://Markdown/documentation/Markdown/Document/BlockContainer-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document\/BlockContainer-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BlockContainer Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document\/blockcontainer-implementations"
},
"doc://Markdown/documentation/Markdown/Document/Markup-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document\/Markup-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Markup Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document\/markup-implementations"
},
"doc://Markdown/documentation/Markdown/Document/init(parsing:options:)": {
  "abstract" : [
    {
      "text" : "Parse a file’s contents into a ",
      "type" : "text"
    },
    {
      "code" : "Document",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "parsing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "options"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown12ParseOptionsV",
      "text" : "ParseOptions"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document\/init(parsing:options:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(parsing:options:)",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document\/init(parsing:options:)"
},
"doc://Markdown/documentation/Markdown/Document/init(parsing:source:options:)": {
  "abstract" : [
    {
      "text" : "Parse a string into a ",
      "type" : "text"
    },
    {
      "code" : "Document",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "parsing"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "source"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "options"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown12ParseOptionsV",
      "text" : "ParseOptions"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Document\/init(parsing:source:options:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(parsing:source:options:)",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/document\/init(parsing:source:options:)"
},
"doc://Markdown/documentation/Markdown/LiteralMarkup": {
  "abstract" : [
    {
      "text" : "An element that is represented with just some plain text.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LiteralMarkup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/LiteralMarkup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LiteralMarkup"
    }
  ],
  "role" : "symbol",
  "title" : "LiteralMarkup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/literalmarkup"
},
"doc://Markdown/documentation/Markdown/Markup": {
  "abstract" : [
    {
      "text" : "A markup element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Markup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Markup"
    }
  ],
  "role" : "symbol",
  "title" : "Markup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markup"
},
"doc://Markdown/documentation/Markdown/MarkupChildren": {
  "abstract" : [
    {
      "text" : "A lazy sequence consisting of an element’s child elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MarkupChildren"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MarkupChildren"
    }
  ],
  "role" : "symbol",
  "title" : "MarkupChildren",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupchildren"
},
"doc://Markdown/documentation/Markdown/PlainTextConvertibleMarkup": {
  "abstract" : [
    {
      "text" : "An element that can be converted to plain text without formatting.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PlainTextConvertibleMarkup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/PlainTextConvertibleMarkup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PlainTextConvertibleMarkup"
    }
  ],
  "role" : "symbol",
  "title" : "PlainTextConvertibleMarkup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/plaintextconvertiblemarkup"
},
"doc://Markdown/documentation/Markdown/TypedChildIndexPath": {
  "abstract" : [
    {
      "text" : "A description of a traversal through a markup tree by index and optional expected type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TypedChildIndexPath"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/TypedChildIndexPath",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TypedChildIndexPath"
    }
  ],
  "role" : "symbol",
  "title" : "TypedChildIndexPath",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/typedchildindexpath"
}
}
}