{
  "abstract" : [
    {
      "text" : "No overview available.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Markdown\/documentation\/Markdown",
        "doc:\/\/Markdown\/documentation\/Markdown\/FormatterAndOptions",
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter",
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options",
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter\/RawRepresentable-Implementations"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "Markdown"
      }
    ],
    "role" : "collectionGroup",
    "title" : "RawRepresentable Implementations"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter\/hashValue"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter\/hash(into:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/markdown\/markupformatter\/options\/thematicbreakcharacter\/rawrepresentable-implementations"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Markdown/documentation/Markdown": {
  "abstract" : [
    {
      "text" : "Swift ",
      "type" : "text"
    },
    {
      "code" : "Markdown",
      "type" : "codeVoice"
    },
    {
      "text" : " is a Swift package for parsing, building, editing, and analyzing Markdown documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Markdown",
  "type" : "topic",
  "url" : "\/documentation\/markdown"
},
"doc://Markdown/documentation/Markdown/FormatterAndOptions": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/FormatterAndOptions",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Formatter and Options",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/formatterandoptions"
},
"doc://Markdown/documentation/Markdown/MarkupFormatter": {
  "abstract" : [
    {
      "text" : "Prints a ",
      "type" : "text"
    },
    {
      "code" : "Markup",
      "type" : "codeVoice"
    },
    {
      "text" : " tree with formatting options.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MarkupFormatter"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MarkupFormatter"
    }
  ],
  "role" : "symbol",
  "title" : "MarkupFormatter",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupformatter"
},
"doc://Markdown/documentation/Markdown/MarkupFormatter/Options": {
  "abstract" : [
    {
      "text" : "Formatting options for Markdown, based on ",
      "type" : "text"
    },
    {
      "identifier" : "https:\/\/commonmark.org",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Options"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Options"
    }
  ],
  "role" : "symbol",
  "title" : "MarkupFormatter.Options",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupformatter\/options"
},
"doc://Markdown/documentation/Markdown/MarkupFormatter/Options/ThematicBreakCharacter": {
  "abstract" : [
    {
      "text" : "The character to use for thematic breaks.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ThematicBreakCharacter"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ThematicBreakCharacter"
    }
  ],
  "role" : "symbol",
  "title" : "MarkupFormatter.Options.ThematicBreakCharacter",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupformatter\/options\/thematicbreakcharacter"
},
"doc://Markdown/documentation/Markdown/MarkupFormatter/Options/ThematicBreakCharacter/hash(into:)": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "RawValue",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hash"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "into"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6HasherV",
      "text" : "Hasher"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter\/hash(into:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hash(into:)",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupformatter\/options\/thematicbreakcharacter\/hash(into:)"
},
"doc://Markdown/documentation/Markdown/MarkupFormatter/Options/ThematicBreakCharacter/hashValue": {
  "abstract" : [

  ],
  "conformance" : {
    "availabilityPrefix" : [
      {
        "text" : "Available when",
        "type" : "text"
      }
    ],
    "conformancePrefix" : [
      {
        "text" : "Conforms when",
        "type" : "text"
      }
    ],
    "constraints" : [
      {
        "code" : "Self",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : " and ",
        "type" : "text"
      },
      {
        "code" : "RawValue",
        "type" : "codeVoice"
      },
      {
        "text" : " conforms to ",
        "type" : "text"
      },
      {
        "code" : "Hashable",
        "type" : "codeVoice"
      },
      {
        "text" : ".",
        "type" : "text"
      }
    ]
  },
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hashValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/MarkupFormatter\/Options\/ThematicBreakCharacter\/hashValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hashValue",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markupformatter\/options\/thematicbreakcharacter\/hashvalue"
},
"https://commonmark.org": {
  "identifier" : "https:\/\/commonmark.org",
  "title" : "CommonMark",
  "titleInlineContent" : [
    {
      "text" : "CommonMark",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "https:\/\/commonmark.org"
}
}
}