{
  "abstract" : [
    {
      "text" : "Replace all cells with a sequence of cells.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Markdown\/documentation\/Markdown",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup",
        "doc:\/\/Markdown\/documentation\/Markdown\/Table",
        "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Row",
        "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Row\/TableCellContainer-Implementations"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Row\/setCells(_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Markdown",
    "externalID" : "s:8Markdown18TableCellContainerPAAE8setCellsyyqd__STRd__AA0B0V0C0V7ElementRtd__lF::SYNTHESIZED::s:8Markdown5TableV3RowV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "setCells"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "Cells"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "Cells"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "Markdown"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "setCells(_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "mutating"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "setCells"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "Cells"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "newCells"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Cells"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "where"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Cells"
            },
            {
              "kind" : "text",
              "text" : " : "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:ST",
              "text" : "Sequence"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Cells"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "kind" : "typeIdentifier",
              "text" : "Element"
            },
            {
              "kind" : "text",
              "text" : " == "
            },
            {
              "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8Markdown5TableV",
              "text" : "Table"
            },
            {
              "kind" : "text",
              "text" : "."
            },
            {
              "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Cell",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:8Markdown5TableV4CellV",
              "text" : "Cell"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "A sequence of ",
                  "type" : "text"
                },
                {
                  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Cell",
                  "isActive" : true,
                  "type" : "reference"
                },
                {
                  "text" : " elements that will replace all of the cells in this row.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "newCells"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/markdown\/table\/row\/setcells(_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Markdown/documentation/Markdown": {
  "abstract" : [
    {
      "text" : "Swift ",
      "type" : "text"
    },
    {
      "code" : "Markdown",
      "type" : "codeVoice"
    },
    {
      "text" : " is a Swift package for parsing, building, editing, and analyzing Markdown documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Markdown",
  "type" : "topic",
  "url" : "\/documentation\/markdown"
},
"doc://Markdown/documentation/Markdown/BlockMarkup": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Markup Block Nodes",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockmarkup"
},
"doc://Markdown/documentation/Markdown/Table": {
  "abstract" : [
    {
      "text" : "A table.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Table"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Table"
    }
  ],
  "role" : "symbol",
  "title" : "Table",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/table"
},
"doc://Markdown/documentation/Markdown/Table/Cell": {
  "abstract" : [
    {
      "text" : "A cell in a table.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cell"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Cell",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cell"
    }
  ],
  "role" : "symbol",
  "title" : "Table.Cell",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/table\/cell"
},
"doc://Markdown/documentation/Markdown/Table/Row": {
  "abstract" : [
    {
      "text" : "A row of cells in a table.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Row"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Row",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Row"
    }
  ],
  "role" : "symbol",
  "title" : "Table.Row",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/table\/row"
},
"doc://Markdown/documentation/Markdown/Table/Row/TableCellContainer-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Row\/TableCellContainer-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "TableCellContainer Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/table\/row\/tablecellcontainer-implementations"
},
"doc://Markdown/documentation/Markdown/Table/Row/setCells(_:)": {
  "abstract" : [
    {
      "text" : "Replace all cells with a sequence of cells.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setCells"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Cells"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Cells"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Table\/Row\/setCells(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "setCells(_:)",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/table\/row\/setcells(_:)"
}
}
}