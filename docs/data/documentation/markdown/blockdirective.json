{
  "abstract" : [
    {
      "text" : "An element with attribute text that wraps other block elements.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Markdown\/documentation\/Markdown",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:8Markdown14BlockDirectiveV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "BlockDirective"
      }
    ],
    "modules" : [
      {
        "name" : "Markdown"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "BlockDirective"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "BlockDirective"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "BlockDirective"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A block directive can be used to tag wrapped block elements or be a novel block element in itself.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "The contents within may be more block directives or the other typical Markdown elements.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, a block directive could serve as a placeholder for a table of contents that can be rendered",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and inlined later:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@TOC",
            "",
            "# Title",
            "..."
          ],
          "syntax" : "markdown",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "A block directive could also add attribute data to the wrapped elements.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Contents inside parentheses ",
              "type" : "text"
            },
            {
              "code" : "(...)",
              "type" : "codeVoice"
            },
            {
              "text" : " are considered ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "argument text",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ". There is",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "no particular mandatory format for argument text but a default ",
              "type" : "text"
            },
            {
              "code" : "name: value",
              "type" : "codeVoice"
            },
            {
              "text" : " style",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "argument parser is included.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@Wrapped(paperStyle: shiny) {",
            "   - A",
            "   - B",
            "}"
          ],
          "syntax" : "markdown",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Block directives can be indented any amount.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@Outer {",
            "  @TwoSpaces {",
            "      @FourSpaces",
            "  }",
            "}"
          ],
          "syntax" : "markdown",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The indentation for the contents of a block directive are measured using",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the first non-blank line. For example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "@Outer {",
            "    This line establishes indentation to be removed from these inner contents.",
            "    This line will line up with the last.",
            "}"
          ],
          "syntax" : "markdown",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The parser will see the following logical lines for the inner content,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "adjusting source locations after the parse.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "This line establishes indentation to be removed from these inner contents.",
            "This line will line up with the last."
          ],
          "syntax" : "markdown",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockContainer",
        "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockQuote",
        "doc:\/\/Markdown\/documentation\/Markdown\/CustomBlock",
        "doc:\/\/Markdown\/documentation\/Markdown\/ListItem",
        "doc:\/\/Markdown\/documentation\/Markdown\/OrderedList",
        "doc:\/\/Markdown\/documentation\/Markdown\/UnorderedList"
      ],
      "title" : "Block Container Blocks"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/init(name:argumentText:children:)-3w3qk",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/init(name:argumentText:children:)-71hek"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/argumentText",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/name",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/nameLocation",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/nameRange"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/BlockContainer-Implementations",
        "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/Markup-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/markdown\/blockdirective"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Markdown/documentation/Markdown": {
  "abstract" : [
    {
      "text" : "Swift ",
      "type" : "text"
    },
    {
      "code" : "Markdown",
      "type" : "codeVoice"
    },
    {
      "text" : " is a Swift package for parsing, building, editing, and analyzing Markdown documents.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Markdown",
  "type" : "topic",
  "url" : "\/documentation\/markdown"
},
"doc://Markdown/documentation/Markdown/BlockContainer": {
  "abstract" : [
    {
      "text" : "A block element whose children must conform to ",
      "type" : "text"
    },
    {
      "code" : "BlockMarkup",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BlockContainer"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockContainer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BlockContainer"
    }
  ],
  "role" : "symbol",
  "title" : "BlockContainer",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockcontainer"
},
"doc://Markdown/documentation/Markdown/BlockDirective": {
  "abstract" : [
    {
      "text" : "An element with attribute text that wraps other block elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BlockDirective"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BlockDirective"
    }
  ],
  "role" : "symbol",
  "title" : "BlockDirective",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective"
},
"doc://Markdown/documentation/Markdown/BlockDirective/BlockContainer-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/BlockContainer-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "BlockContainer Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/blockcontainer-implementations"
},
"doc://Markdown/documentation/Markdown/BlockDirective/Markup-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/Markup-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Markup Implementations",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/markup-implementations"
},
"doc://Markdown/documentation/Markdown/BlockDirective/argumentText": {
  "abstract" : [
    {
      "text" : "The textual content that can be interpreted as arguments to the directive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "argumentText"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown21DirectiveArgumentTextV",
      "text" : "DirectiveArgumentText"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/argumentText",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "argumentText",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/argumenttext"
},
"doc://Markdown/documentation/Markdown/BlockDirective/init(name:argumentText:children:)-3w3qk": {
  "abstract" : [
    {
      "text" : "Create a block directive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "argumentText"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "children"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown11BlockMarkupP",
      "text" : "BlockMarkup"
    },
    {
      "kind" : "text",
      "text" : "...)"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/init(name:argumentText:children:)-3w3qk",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:argumentText:children:)",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/init(name:argumenttext:children:)-3w3qk"
},
"doc://Markdown/documentation/Markdown/BlockDirective/init(name:argumentText:children:)-71hek": {
  "abstract" : [
    {
      "text" : "Create a block directive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Children"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "argumentText"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "children"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Children"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/init(name:argumentText:children:)-71hek",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(name:argumentText:children:)",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/init(name:argumenttext:children:)-71hek"
},
"doc://Markdown/documentation/Markdown/BlockDirective/name": {
  "abstract" : [
    {
      "text" : "The name of the directive.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/name",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "name",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/name"
},
"doc://Markdown/documentation/Markdown/BlockDirective/nameLocation": {
  "abstract" : [
    {
      "text" : "The source location from which the directive’s name was parsed, if it",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "was parsed from source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nameLocation"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown14SourceLocationV",
      "text" : "SourceLocation"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/nameLocation",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nameLocation",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/namelocation"
},
"doc://Markdown/documentation/Markdown/BlockDirective/nameRange": {
  "abstract" : [
    {
      "text" : "The source range from which the directive’s name was parsed, if it was",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "parsed from source.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "nameRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:8Markdown11SourceRangea",
      "text" : "SourceRange"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockDirective\/nameRange",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "nameRange",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockdirective\/namerange"
},
"doc://Markdown/documentation/Markdown/BlockMarkup": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockMarkup",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Markup Block Nodes",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockmarkup"
},
"doc://Markdown/documentation/Markdown/BlockQuote": {
  "abstract" : [
    {
      "text" : "A block quote.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "BlockQuote"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/BlockQuote",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "BlockQuote"
    }
  ],
  "role" : "symbol",
  "title" : "BlockQuote",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/blockquote"
},
"doc://Markdown/documentation/Markdown/CustomBlock": {
  "abstract" : [
    {
      "text" : "A custom block markup element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CustomBlock"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/CustomBlock",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CustomBlock"
    }
  ],
  "role" : "symbol",
  "title" : "CustomBlock",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/customblock"
},
"doc://Markdown/documentation/Markdown/ListItem": {
  "abstract" : [
    {
      "text" : "A list item in an ordered or unordered list.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ListItem"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/ListItem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ListItem"
    }
  ],
  "role" : "symbol",
  "title" : "ListItem",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/listitem"
},
"doc://Markdown/documentation/Markdown/Markup": {
  "abstract" : [
    {
      "text" : "A markup element.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Markup"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/Markup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Markup"
    }
  ],
  "role" : "symbol",
  "title" : "Markup",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/markup"
},
"doc://Markdown/documentation/Markdown/OrderedList": {
  "abstract" : [
    {
      "text" : "An ordered list.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OrderedList"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/OrderedList",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OrderedList"
    }
  ],
  "role" : "symbol",
  "title" : "OrderedList",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/orderedlist"
},
"doc://Markdown/documentation/Markdown/UnorderedList": {
  "abstract" : [
    {
      "text" : "An unordered list.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "UnorderedList"
    }
  ],
  "identifier" : "doc:\/\/Markdown\/documentation\/Markdown\/UnorderedList",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "UnorderedList"
    }
  ],
  "role" : "symbol",
  "title" : "UnorderedList",
  "type" : "topic",
  "url" : "\/documentation\/markdown\/unorderedlist"
}
}
}